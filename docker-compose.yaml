version: '3'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./deploy/docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - trader
    ports:
      - "4000:4000"

  trader:
    build:
      context: .
      dockerfile: deploy/docker/trader.dockerfile
    image: xiao4011/ptcg_trader
    volumes:
      - ./deploy/config:/server/deploy/config
    environment: 
      CONFIG_PATH: /server/deploy/config
      CONFIG_NAME: app_docker.yaml
    # ports:
    #   - 17420:17420  
    depends_on:
      - postgres
      - redis
      - stan
    entrypoint:
      - ./main 
      - server

  matcher:
    image: xiao4011/ptcg_trader
    volumes:
      - ./deploy/config:/server/deploy/config
    environment: 
      CONFIG_PATH: /server/deploy/config
      CONFIG_NAME: app_docker.yaml
    depends_on:
      - trader
    entrypoint:
      - ./main 
      - matcher

  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: local
      POSTGRES_DB: ptcg
    volumes:
      - ./.data/pg:/var/lib/postgresql/data
      # - ./initdb/sql:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432

  redis:
    image: redis
    ports:
      - 6379:6379

  swagger:
    image: swaggerapi/swagger-ui
    environment: 
      SWAGGER_JSON: "/documents/swagger.json"
    volumes:
      - ./documents:/documents
    ports:
      - 8080:8080

  zookeeper:
    image: 'bitnami/zookeeper'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    hostname: 'kafka'
    image: 'bitnami/kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  stan:
    image: nats-streaming
    command: -p 4222 -m 8222 -cid ptcg -store file -dir /datastore -cluster nats://0.0.0.0:6222 -routes nats://stan:6222
    volumes:
      - ./.data/stan:/datastore
    ports:
      - 4222:4222 # Use port for clients
      - 8222:8222 # Use port for http monitoring
